import telebot
from telebot import types
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TOKEN = '7906419182:AAFkvUNgQpbgAka959-gC1oL0WGvq58SPJs'
bot = telebot.TeleBot(TOKEN)

scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("creds.json", scope)
client = gspread.authorize(creds)
sheet = client.open("–ó–∞—è–≤–∫–∏ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ").sheet1

user_data = {}

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
def main_menu(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("\ud83d\udccb –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", "\u2139\ufe0f –û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ")
    markup.row("\ud83d\udcb0 –¶–µ–Ω—ã –∏ —Ñ–æ—Ä–º–∞—Ç—ã", "\u2b50 –û—Ç–∑—ã–≤—ã")
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# === /start ===
@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    user_data.pop(chat_id, None)
    bot.send_message(chat_id, "\ud83d\udc4b –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∑–∞–Ω—è—Ç–∏—è –ø–æ *Python*.\n"
                              "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.", parse_mode="Markdown")
    main_menu(chat_id)

# === /help ===
@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id,
        "ü§ñ –ö–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/help ‚Äî –ø–æ–º–æ—â—å\n"
        "/price ‚Äî —Ü–µ–Ω—ã\n")

# === /price ===
@bot.message_handler(commands=['price'])
def price(message):
    show_price(message.chat.id)

# === –û—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é ===
@bot.message_handler(func=lambda m: m.text in ["\ud83d\udccb –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", "\u2139\ufe0f –û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ", "\ud83d\udcb0 –¶–µ–Ω—ã –∏ —Ñ–æ—Ä–º–∞—Ç—ã", "\u2b50 –û—Ç–∑—ã–≤—ã"])
def menu_handler(message):
    chat_id = message.chat.id
    text = message.text

    if text == "\ud83d\udccb –ó–∞–ø–∏—Å–∞—Ç—å—Å—è":
        user_data[chat_id] = {}
        bot.send_message(chat_id, "\u270d\ufe0f –í–≤–µ–¥–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ—ë *–∏–º—è*:", parse_mode="Markdown", reply_markup=types.ReplyKeyboardRemove())
    elif text == "\u2139\ufe0f –û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ":
        bot.send_message(chat_id, "\ud83e\uddd1\u200d\ud83d\udcbc –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: –ù–∏–∫–∏—Ç–∞\n"
                                  "\ud83d\udc68\u200d\ud83d\udcbb 3 –≥–æ–¥–∞ –æ–ø—ã—Ç–∞ –≤ Python\n"
                                  "\ud83c\udf93 –†–∞–±–æ—Ç–∞—é —Å —É—á–µ–Ω–∏–∫–∞–º–∏ –æ—Ç 10 –¥–æ 18 –ª–µ—Ç\n"
                                  "\ud83d\udcc8 –ü–æ–º–æ–≥–∞—é –ø–æ–Ω—è—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–∞–∫—Ç–∏–∫—É")
    elif text == "\ud83d\udcb0 –¶–µ–Ω—ã –∏ —Ñ–æ—Ä–º–∞—Ç—ã":
        show_price(chat_id)
    elif text == "\u2b50 –û—Ç–∑—ã–≤—ã":
        bot.send_message(chat_id, "\ud83d\udce2 –û—Ç–∑—ã–≤—ã —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è. –¢—ã –º–æ–∂–µ—à—å –±—ã—Ç—å –ø–µ—Ä–≤—ã–º, –∫—Ç–æ –æ—Å—Ç–∞–≤–∏—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–∑—ã–≤ \ud83d\ude0a")

# === –í—ã–≤–æ–¥ —Ü–µ–Ω—ã ===
def show_price(chat_id):
    bot.send_message(chat_id,
        "\ud83d\udcb0 *–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–Ω—è—Ç–∏–π:*\n"
        "‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ ‚Äî *600\u20bd/–∑–∞–Ω—è—Ç–∏–µ*\n"
        "‚Ä¢ –í –≥—Ä—É–ø–ø–µ (–¥–æ 4 —á–µ–ª) ‚Äî *400\u20bd/–∑–∞–Ω—è—Ç–∏–µ*\n\n"
        "\ud83d\udcc5 *–§–æ—Ä–º–∞—Ç—ã:*\n"
        "‚Ä¢ –û–Ω–ª–∞–π–Ω —á–µ—Ä–µ–∑ Zoom / Discord\n"
        "‚Ä¢ –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è, –º–∏–Ω–∏-–ø—Ä–æ–µ–∫—Ç—ã\n"
        "‚Ä¢ –£—Ä–æ–≤–Ω–∏: —Å –Ω—É–ª—è / –ï–ì–≠ / –ø—Ä–æ–µ–∫—Ç—ã",
        parse_mode='Markdown')

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–Ω–∫–µ—Ç—ã ===
@bot.message_handler(func=lambda message: True)
def handle_form(message):
    chat_id = message.chat.id
    text = message.text

    if chat_id not in user_data:
        return

    step = user_data[chat_id]

    if "name" not in step:
        step["name"] = text
        bot.send_message(chat_id, "\ud83d\udcda –£–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π *–≤–æ–∑—Ä–∞—Å—Ç –∏–ª–∏ –∫–ª–∞—Å—Å:*", parse_mode="Markdown")
    elif "age" not in step:
        step["age"] = text

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add("–ù–∞—É—á–∏—Ç—å—Å—è —Å –Ω—É–ª—è", "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ï–ì–≠")
        markup.add("–°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä", "–•–æ—á—É –Ω–∞—É—á–∏—Ç—å—Å—è –¥–µ–ª–∞—Ç—å —Å–∞–π—Ç—ã")
        bot.send_message(chat_id, "\ud83c\udf1f –í—ã–±–µ—Ä–∏ —Ü–µ–ª—å –æ–±—É—á–µ–Ω–∏—è:", reply_markup=markup)

    elif "goal" not in step:
        step["goal"] = text

        if message.from_user.username:
            step["username"] = f"@{message.from_user.username}"
            step["phone"] = "-"
            save_to_sheet(chat_id)
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            button = types.KeyboardButton("\ud83d\udcde –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)
            markup.add(button)
            bot.send_message(chat_id, "–£ —Ç–µ–±—è –Ω–µ —É–∫–∞–∑–∞–Ω username. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:", reply_markup=markup)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ===
@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    chat_id = message.chat.id
    if chat_id in user_data and "phone" not in user_data[chat_id]:
        phone = message.contact.phone_number
        user_data[chat_id]["phone"] = phone
        user_data[chat_id]["username"] = "-"
        save_to_sheet(chat_id)

# === –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É ===
def save_to_sheet(chat_id):
    step = user_data[chat_id]
    name = step["name"]
    age = step["age"]
    goal = step["goal"]
    username = step["username"]
    phone = step["phone"]

    try:
        sheet.append_row([name, age, goal, username, phone])
        bot.send_message(chat_id, "\u2705 –°–ø–∞—Å–∏–±–æ, –∑–∞—è–≤–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.", reply_markup=types.ReplyKeyboardRemove())
    except Exception as e:
        bot.send_message(chat_id, "\u26a0\ufe0f –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        print(f"–û—à–∏–±–∫–∞ Google Sheets: {e}")

    user_data.pop(chat_id, None)
    main_menu(chat_id)

# === –ó–∞–ø—É—Å–∫ ===
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.polling(none_stop=True)
