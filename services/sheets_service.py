from datetime import datetime
from state.users import user_data, used_contacts, pending, writing_ids
from .sheets_init import worksheet
from utils.menu import get_main_menu


def finish_registration(bot, chat_id):
    print(f"[finish] ‚ñ∂ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è chat_id={chat_id}")

    data = user_data.get(chat_id)
    if not data:
        print(f"[finish] ‚ùå user_data –ø—É—Å—Ç–æ–π –¥–ª—è chat_id={chat_id}")
        bot.send_message(chat_id, "‚ö†Ô∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±—ã–ª–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞. –ù–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞.")
        return

    identifier = data.get("contact") or str(chat_id)
    print(f"[finish] ‚ñ∂ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞—è–≤–∫–∏ –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É: {identifier}")

    # üîí –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
    if identifier in writing_ids:
        print(f"[finish] ‚õî –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–ª—è {identifier}, –æ—Ç–º–µ–Ω–∞.")
        return

    writing_ids.add(identifier)

    try:
        existing = get_user_row(identifier)
        if existing:
            print(f"[finish] üîÅ –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∑–∞—è–≤–∫–∞ –¥–ª—è {identifier}. –ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            markup = get_main_menu()
            bot.send_message(chat_id, "‚õî –í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –∑–∞—è–≤–∫—É. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.", reply_markup=markup)
            return

        now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        row = [
            str(chat_id),                   # ID (A)
            data.get('parent_name', ""),   # –ò–º—è —Ä–æ–¥–∏—Ç–µ–ª—è (B)
            data.get('student_name', ""),  # –ò–º—è —É—á–µ–Ω–∏–∫–∞ (C)
            data.get('age', ""),           # –í–æ–∑—Ä–∞—Å—Ç (D)
            data.get('contact', ""),       # –ö–æ–Ω—Ç–∞–∫—Ç (E)
            data.get('course', ""),        # –ö—É—Ä—Å (F)
            "",                            # –î–∞—Ç–∞ –∑–∞–Ω—è—Ç–∏—è (G)
            "",                            # –°—Å—ã–ª–∫–∞ (H)
            "–û–∂–∏–¥–∞–µ—Ç",                     # –°—Ç–∞—Ç—É—Å (I)
            now                            # –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è (J)
        ]

        worksheet.append_row(row)
        print(f"[finish] ‚úÖ –ó–∞—è–≤–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É: {identifier}")

        contact = data.get('contact')
        if contact:
            used_contacts.add(contact)
        pending[contact or chat_id] = row

        markup = get_main_menu()
        bot.send_message(chat_id, "‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è.", reply_markup=markup)

    except Exception as e:
        print(f"[finish] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏: {e}")
        bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

    finally:
        writing_ids.discard(identifier)
        user_data.pop(chat_id, None)


def get_user_row(identifier):
    """–ü–æ–∏—Å–∫ —Å—Ç—Ä–æ–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ chat_id –∏–ª–∏ contact"""
    try:
        cell = worksheet.find(str(identifier))
        if not cell:
            return None
        return worksheet.row_values(cell.row)
    except Exception as e:
        print(f"[get_user_row] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")
        return None


def update_status_by_user_id(user_id, new_status):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–ª–µ '–°—Ç–∞—Ç—É—Å' –ø–æ chat_id"""
    try:
        cell = worksheet.find(str(user_id))
        row = cell.row
        worksheet.update_cell(row, 9, new_status)  # –°—Ç–æ–ª–±–µ—Ü I
        return True
    except Exception as e:
        print(f"[update_status] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return False
