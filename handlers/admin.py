from telebot import types
from services.sheets_init import worksheet
from config import ADMIN_ID

def is_admin(user_id):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    return str(user_id) == str(ADMIN_ID)

def notify_admin_new_application(bot, application_data):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ"""
    try:
        notification = (
            "üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ!\n\n"
            f"üë§ –ò–º—è: {application_data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"üì± –ö–æ–Ω—Ç–∞–∫—Ç: {application_data.get('contact', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"üìö –ö—É—Ä—Å: {application_data.get('course', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"üéØ –¶–µ–ª—å: {application_data.get('goal', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
            f"üìÖ –í–æ–∑—Ä–∞—Å—Ç: {application_data.get('age', '–ù–µ —É–∫–∞–∑–∞–Ω')}"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é –∞–¥–º–∏–Ω—É
        bot.send_message(ADMIN_ID, notification)
        print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É {ADMIN_ID}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {str(e)}")

def register(bot):
    @bot.message_handler(func=lambda m: m.text == "üë®‚Äçüíº –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å" and is_admin(m.from_user.id))
    def handle_admin_panel(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add("üìã –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫")
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!", reply_markup=markup)

    @bot.message_handler(func=lambda m: m.text == "üìã –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫" and is_admin(m.from_user.id))
    def handle_pending_applications(message):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –±–µ–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–π –¥–∞—Ç—ã"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
            data = worksheet.get_all_values()
            if len(data) <= 1:  # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞
                bot.send_message(message.chat.id, "‚úÖ –ù–µ—Ç –∑–∞—è–≤–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ")
                return
                
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –∫–æ–ª–æ–Ω–æ–∫
            headers = data[0]
            try:
                date_col = headers.index('–î–∞—Ç–∞ –∑–∞–Ω—è—Ç–∏—è')
                link_col = headers.index('–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ')
                name_col = headers.index('–ò–º—è')
                contact_col = headers.index('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
                course_col = headers.index('–ö—É—Ä—Å')
                goal_col = headers.index('–¶–µ–ª—å')
                age_col = headers.index('–í–æ–∑—Ä–∞—Å—Ç')
                id_col = headers.index('ID')
            except ValueError as e:
                bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Ç–∞–±–ª–∏—Ü—ã: {str(e)}")
                return
            
            pending_apps = []
            
            # –ù–∞—á–∏–Ω–∞–µ–º —Å 1, –ø—Ä–æ–ø—É—Å–∫–∞—è –∑–∞–≥–æ–ª–æ–≤–∫–∏
            for row in data[1:]:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏ –¥–∞—Ç–∞, –∏ —Å—Å—ã–ª–∫–∞ –ø—É—Å—Ç—ã–µ
                date = str(row[date_col]).strip() if date_col < len(row) else ""
                link = str(row[link_col]).strip() if link_col < len(row) else ""
                
                if not date and not link:  # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–±–∞ –ø–æ–ª—è –ø—É—Å—Ç—ã–µ
                    app_info = (
                        f"üë§ –ò–º—è: {row[name_col] if name_col < len(row) else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
                        f"üì± –ö–æ–Ω—Ç–∞–∫—Ç: {row[contact_col] if contact_col < len(row) else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                        f"üìö –ö—É—Ä—Å: {row[course_col] if course_col < len(row) else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                        f"üéØ –¶–µ–ª—å: {row[goal_col] if goal_col < len(row) else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n"
                        f"üìÖ –í–æ–∑—Ä–∞—Å—Ç: {row[age_col] if age_col < len(row) else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                        f"üÜî ID –≤ —Ç–∞–±–ª–∏—Ü–µ: {row[id_col] if id_col < len(row) else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                        f"-------------------"
                    )
                    pending_apps.append(app_info)
            
            if pending_apps:
                response = "üìã –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –±–µ–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–π –¥–∞—Ç—ã:\n\n" + "\n\n".join(pending_apps)
                # –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
                if len(response) > 4000:
                    parts = [response[i:i+4000] for i in range(0, len(response), 4000)]
                    for part in parts:
                        bot.send_message(message.chat.id, part)
                else:
                    bot.send_message(message.chat.id, response)
            else:
                bot.send_message(message.chat.id, "‚úÖ –ù–µ—Ç –∑–∞—è–≤–æ–∫ –±–µ–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–π –¥–∞—Ç—ã")
                
        except Exception as e:
            bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫: {str(e)}") 