# === handlers/registration.py ===
from telebot import types
import re

from state.users import user_data, chat_contact_map, used_contacts, pending, get_user_status
from utils.menu import get_main_menu
from services.sheets_service import worksheet, finish_registration
from handlers.admin import notify_admin_new_application

def handle_existing_registration(bot, chat_id):
    markup = get_main_menu()
    bot.send_message(chat_id, "üìù –í—ã —É–∂–µ –æ—Å—Ç–∞–≤–ª—è–ª–∏ –∑–∞—è–≤–∫—É. –û–∂–∏–¥–∞–π—Ç–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —É—Ä–æ–∫–∞.", reply_markup=markup)

def register(bot):
    @bot.message_handler(func=lambda m: m.text == "üìã –ó–∞–ø–∏—Å–∞—Ç—å—Å—è")
    def handle_signup(message):
        chat_id = message.chat.id
        exists, date, course, link = get_user_status(chat_id)
        if exists:
            if not date and not link:
                handle_existing_registration(bot, chat_id)
            else:
                markup = get_main_menu()
                bot.send_message(chat_id, f"–í—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ:\nüìÖ –î–∞—Ç–∞: {date}\nüìò –ö—É—Ä—Å: {course}\nüîó –°—Å—ã–ª–∫–∞: {link}", reply_markup=markup)
            return
        user_data[chat_id] = {}
        bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —É—á–µ–Ω–∏–∫–∞:", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, process_name)

    def process_name(message):
        user_data[message.chat.id]['name'] = message.text.strip()
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —É—á–µ–Ω–∏–∫–∞:")
        bot.register_next_step_handler(message, process_age)

    def process_age(message):
        user_data[message.chat.id]['age'] = message.text.strip()
        bot.send_message(message.chat.id, "–ö–∞–∫–æ–≤–∞ —Ü–µ–ª—å –∑–∞–Ω—è—Ç–∏–π?")
        bot.register_next_step_handler(message, process_goal)

    def process_goal(message):
        chat_id = message.chat.id
        user_data[chat_id]['goal'] = message.text.strip()
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add("Python")
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –æ–±—É—á–µ–Ω–∏—è:", reply_markup=markup)
        bot.register_next_step_handler(message, process_course)

    def process_course(message):
        course = message.text.strip()
        if course.lower() != "python":
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–π –∫—É—Ä—Å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É.")
            return bot.register_next_step_handler(message, process_course)

        user_data[message.chat.id]['course'] = course
        user = message.from_user

        if user.username:
            user_data[message.chat.id]['contact'] = f"@{user.username}"
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            notify_admin_new_application(bot, user_data[message.chat.id])
            finish_registration(bot, message.chat.id)
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            markup.add(types.KeyboardButton("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True))
            bot.send_message(
                message.chat.id,
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79991234567:",
                reply_markup=markup
            )
            bot.register_next_step_handler(message, process_phone)

    def process_phone(message):
        chat_id = message.chat.id

        if message.contact:  # –∫–æ–Ω—Ç–∞–∫—Ç —Å –∫–Ω–æ–ø–∫–∏
            phone = message.contact.phone_number
        else:
            phone = message.text.strip()

        phone = re.sub(r'\D', '', phone)
        if phone.startswith('8'):
            phone = '7' + phone[1:]
        if not phone.startswith('7') or len(phone) != 11:
            bot.send_message(chat_id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞. –í–≤–µ–¥–∏—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: +79991234567")
            return bot.register_next_step_handler(message, process_phone)

        contact = f"+{phone}"

        if contact in used_contacts:
            exists, date, course, link = get_user_status(contact)
            if exists:
                user_data.pop(chat_id, None)
                if not date and not link:
                    handle_existing_registration(bot, chat_id)
                else:
                    markup = get_main_menu()
                    bot.send_message(chat_id, f"–í—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ:\nüìÖ –î–∞—Ç–∞: {date}\nüìò –ö—É—Ä—Å: {course}\nüîó –°—Å—ã–ª–∫–∞: {link}", reply_markup=markup)
                return

        user_data[chat_id]['contact'] = contact
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        notify_admin_new_application(bot, user_data[chat_id])
        finish_registration(bot, chat_id)
