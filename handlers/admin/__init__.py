# –ó–¥–µ—Å—å –±—É–¥—É—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤—Å–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ 

from .security import register_security_handlers
from .applications import register_applications_handlers
from .archive import register_archive_handlers
from .courses import register_courses_handlers
from .contacts import register_contacts_handlers
from .reviews import register_reviews_handlers
from utils.menu import get_admin_menu, create_confirm_menu, get_cancel_button, is_admin
from .export import register_export_handlers
from config import ADMIN_ID

def register_all_admin_handlers(bot, logger):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏"""
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è /start —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞
    @bot.message_handler(commands=['start'], func=lambda m: str(m.from_user.id) == str(ADMIN_ID))
    def handle_start_command(message):
        import time
        start_time = time.time()
        
        logger.info(f"Start command received from user {message.from_user.id} (admin check: {is_admin(message.from_user.id)})")
        bot.send_message(message.chat.id, "üîß –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", reply_markup=get_admin_menu())
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
        logger.info(f"üîß Admin {message.from_user.id} started bot successfully")
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        response_time = time.time() - start_time
        logger.info(f"‚è±Ô∏è Admin handler response time: {response_time:.3f}s (admin start)")
        
        # –ë–∏–∑–Ω–µ—Å-–º–µ—Ç—Ä–∏–∫–∏
        logger.info(f"üìä Admin activity: admin {message.from_user.id} started bot")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    register_security_handlers(bot, logger)
    register_applications_handlers(bot, logger)
    register_archive_handlers(bot, logger)
    register_courses_handlers(bot, logger)
    register_contacts_handlers(bot, logger)
    register_reviews_handlers(bot, logger)
    register_export_handlers(bot, logger)
    # –ó–¥–µ—Å—å –±—É–¥—É—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã (export, menu) 