import logging
import os
from datetime import datetime

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç config –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ dotenv –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
try:
    from config import LOG_LEVEL, LOG_FILE
except ImportError:
    LOG_LEVEL = "INFO"
    LOG_FILE = "bot.log"

def rotate_log_file(log_file_path, max_size_mb=1):
    """–†–æ—Ç–∞—Ü–∏—è –ª–æ–≥-—Ñ–∞–π–ª–∞ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞"""
    try:
        if not os.path.exists(log_file_path):
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –ú–ë
        file_size_mb = os.path.getsize(log_file_path) / (1024 * 1024)
        
        if file_size_mb >= max_size_mb:
            # –°–æ–∑–¥–∞–µ–º –∏–º—è –¥–ª—è –∞—Ä—Ö–∏–≤–∞ —Å –¥–∞—Ç–æ–π
            timestamp = datetime.now().strftime('%Y-%m-%d_%H-%M-%S')
            archive_name = f"{log_file_path}.{timestamp}"
            
            # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
            os.rename(log_file_path, archive_name)
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª
            with open(log_file_path, 'w', encoding='utf-8') as f:
                pass
            
            print(f"üìÅ –õ–æ–≥-—Ñ–∞–π–ª —Ä–æ—Ç–∏—Ä–æ–≤–∞–Ω: {log_file_path} ‚Üí {archive_name} ({file_size_mb:.2f} –ú–ë)")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥-—Ñ–∞–π–ª–∞: {e}")

def setup_logger(name='bot'):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è –±–æ—Ç–∞"""
    
    # –†–æ—Ç–∏—Ä—É–µ–º –ª–æ–≥-—Ñ–∞–π–ª –µ—Å–ª–∏ –æ–Ω —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π
    rotate_log_file(LOG_FILE, max_size_mb=1)
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    log_dir = os.path.dirname(LOG_FILE)
    if log_dir and not os.path.exists(log_dir):
        os.makedirs(log_dir)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
    logger = logging.getLogger(name)
    logger.setLevel(getattr(logging, LOG_LEVEL.upper()))
    
    # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    logger.handlers.clear()
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä
    formatter = logging.Formatter(
        '%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S'
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∞–π–ª–∞
    file_handler = logging.FileHandler(LOG_FILE, encoding='utf-8')
    file_handler.setLevel(logging.DEBUG)
    file_handler.setFormatter(formatter)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
    console_handler = logging.StreamHandler()
    console_handler.setLevel(logging.INFO)
    console_handler.setFormatter(formatter)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    logger.addHandler(file_handler)
    logger.addHandler(console_handler)
    
    return logger

def log_user_action(logger, user_id, action, details=None):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    message = f"USER {user_id}: {action}"
    if details:
        message += f" - {details}"
    logger.info(message)

def log_admin_action(logger, admin_id, action, details=None):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    message = f"ADMIN {admin_id}: {action}"
    if details:
        message += f" - {details}"
    logger.info(message)

def log_error(logger, error, context=None):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫"""
    message = f"ERROR: {error}"
    if context:
        message += f" | Context: {context}"
    logger.error(message)

def log_database_operation(logger, operation, table, details=None):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    message = f"DB {operation} on {table}"
    if details:
        message += f" - {details}"
    logger.debug(message)

def log_bot_startup(logger):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info("ü§ñ Bot started successfully")
    logger.info(f"üìù Log level: {LOG_LEVEL}")
    logger.info(f"üìÅ Log file: {LOG_FILE}")

def log_bot_shutdown(logger):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞"""
    logger.info("üõë Bot shutdown") 